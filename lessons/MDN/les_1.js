/* 
                                BASICS   
https://developer.mozilla.org/ru/docs/Web/JavaScript/Guide/Grammar_and_Types
*/


/*
-Чувствителен к регистру, кодировка UNICODE.
-Инструкции - statements. Разделяются (;)
-Исходный сканируется текст слева направо.
-Комментарии (/\(экранирование)*...*\/) или //
-переменные var, let(в области видимости блока), const
-названия myVar, _myVar, $myVar, MyVar
*/



/*
Исходный текст скриптов на JavaScript сканируется слева направо 
и конвертируется в последовательность входных элементов, 
являющихся токенами (tokens), управляющими символами, 
символами конца строки, комментариями или пробельными символами.

Лексема (token) - минимальная единица языка, имеющая самостоятельный смысл. Существуют следующие виды лексем
имена (идентификаторы);
ключевые слова;
знаки операций;
разделители;
литералы (константы).
*/
var input;
if (input === undefined) {
    doThis();
}
else {
    doThat();
}

/*
undefined 
- false в логическом контексте
- NaN в числовом контексте

null
-0 в числовом контексте
-false в логическом
*/


/* 
Область видимости и поднятие переменных:
-const и let не поднимутся

Поднятие функций: 
- можно поднять определение функции, 
функцию определенную через выражение нельзя.
*/
//----------можно
foo();
function foo() {
    console.log("this function");
}
//----------нельзя
baz();
var baz = function() {
    console.log("that function");
}

/*
Глобальные переменные
На веб страницах глобальный объект - windows
-window
window.foo = "bar";
*/

/* 
                                Структуры и типы данных:
Примитивы(6)
1) Boolean - true & false
2) null
3) undefined
4) Number
5) String
6) Symbol
-----------------
7)Object
Объекты - контейнеры для значений
функции - процедуры действий
*/


/*
Javascript - динамически типизированный язык.

+
number ==> string
x = "words " + 42  // "words 42"
-
string ==> number
"37" - 7 // 30


Методы:
* parseInt(numString, [radix])
* parseFloat(numString)

Алтернатива - унарный плюс:
"1.1" + "1.1"           // "1.11.1"
(+"1.1") + (+"1.1")     // 2.2
*/